/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client.view;

import Client.control.ClientMainCtr;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JPopupMenu;
import model.Channel;
import model.Client;

/**
 *
 * @author ns_red
 */
public class ClientMainFrm extends javax.swing.JFrame {
    
    private ClientMainCtr cmc;
    /**
     * Creates new form ClientMainFrm
     */
    public ClientMainFrm(ClientMainCtr cmc)
    {
        this.cmc = cmc;
        initComponents();
        this.setVisible(true);        
        mySetting();
    }
    
    public void mySetting(){        
        txtConsole.setEditable(false);
        msgPanel.remove(channelMsgPanel);                
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        dlgCreate = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTopic = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();
        txtPassword = new javax.swing.JPasswordField();
        jToolBar1 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        underBar = new javax.swing.JPanel();
        splitPanel1 = new javax.swing.JSplitPane();
        splitPanel2 = new javax.swing.JSplitPane();
        roomInfoPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        roomPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listChannel = new javax.swing.JList<>();
        chat_msgPanel = new javax.swing.JPanel();
        msgPanel = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtConsole = new javax.swing.JTextArea();
        serverMsgPanel = new javax.swing.JPanel();
        channelMsgPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtChannelMsg = new javax.swing.JTextArea();
        chatPanel = new javax.swing.JPanel();
        textFieldChat = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itemConnect = new javax.swing.JMenuItem();
        txtCreate = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        fileTransferItem = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        dlgCreate.setTitle("Create Channel");
        dlgCreate.setIconImage(new ImageIcon("img/plus.png").getImage());
        dlgCreate.setResizable(false);

        jLabel1.setText("Name");

        jLabel2.setText("Password");

        jLabel3.setText("Topic");

        jLabel4.setText("Description");

        txtDesc.setColumns(20);
        txtDesc.setRows(5);
        jScrollPane3.setViewportView(txtDesc);

        javax.swing.GroupLayout dlgCreateLayout = new javax.swing.GroupLayout(dlgCreate.getContentPane());
        dlgCreate.getContentPane().setLayout(dlgCreateLayout);
        dlgCreateLayout.setHorizontalGroup(
            dlgCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgCreateLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(dlgCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(35, 35, 35)
                .addGroup(dlgCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtName)
                    .addComponent(txtTopic)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                    .addComponent(txtPassword))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        dlgCreateLayout.setVerticalGroup(
            dlgCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgCreateLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(dlgCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dlgCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dlgCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTopic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dlgCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.BorderLayout(1, 1));

        jToolBar1.setRollover(true);

        jPanel1.setPreferredSize(new java.awt.Dimension(487, 25));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 487, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        jToolBar1.add(jPanel1);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        underBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        underBar.setPreferredSize(new java.awt.Dimension(673, 25));

        javax.swing.GroupLayout underBarLayout = new javax.swing.GroupLayout(underBar);
        underBar.setLayout(underBarLayout);
        underBarLayout.setHorizontalGroup(
            underBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );
        underBarLayout.setVerticalGroup(
            underBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        getContentPane().add(underBar, java.awt.BorderLayout.PAGE_END);

        splitPanel1.setDividerLocation(250);
        splitPanel1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        splitPanel2.setDividerLocation(250);
        splitPanel2.setPreferredSize(new java.awt.Dimension(671, 300));

        roomInfoPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        roomInfoPanel.setPreferredSize(new java.awt.Dimension(300, 250));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout roomInfoPanelLayout = new javax.swing.GroupLayout(roomInfoPanel);
        roomInfoPanel.setLayout(roomInfoPanelLayout);
        roomInfoPanelLayout.setHorizontalGroup(
            roomInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
        );
        roomInfoPanelLayout.setVerticalGroup(
            roomInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
        );

        splitPanel2.setRightComponent(roomInfoPanel);

        roomPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        roomPanel.setPreferredSize(new java.awt.Dimension(350, 250));

        listChannel.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listChannel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listChannelMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(listChannel);

        javax.swing.GroupLayout roomPanelLayout = new javax.swing.GroupLayout(roomPanel);
        roomPanel.setLayout(roomPanelLayout);
        roomPanelLayout.setHorizontalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
        );
        roomPanelLayout.setVerticalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
        );

        splitPanel2.setLeftComponent(roomPanel);

        splitPanel1.setTopComponent(splitPanel2);

        chat_msgPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        chat_msgPanel.setPreferredSize(new java.awt.Dimension(671, 150));
        chat_msgPanel.setLayout(new javax.swing.BoxLayout(chat_msgPanel, javax.swing.BoxLayout.Y_AXIS));

        msgPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        msgPanel.setPreferredSize(new java.awt.Dimension(100, 230));

        txtConsole.setColumns(20);
        txtConsole.setRows(5);
        jScrollPane2.setViewportView(txtConsole);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
        );

        msgPanel.addTab("Console", jPanel2);

        serverMsgPanel.setMinimumSize(new java.awt.Dimension(100, 0));
        serverMsgPanel.setPreferredSize(new java.awt.Dimension(485, 260));

        javax.swing.GroupLayout serverMsgPanelLayout = new javax.swing.GroupLayout(serverMsgPanel);
        serverMsgPanel.setLayout(serverMsgPanelLayout);
        serverMsgPanelLayout.setHorizontalGroup(
            serverMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 485, Short.MAX_VALUE)
        );
        serverMsgPanelLayout.setVerticalGroup(
            serverMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 233, Short.MAX_VALUE)
        );

        msgPanel.addTab("Server", serverMsgPanel);

        txtChannelMsg.setColumns(20);
        txtChannelMsg.setRows(5);
        jScrollPane5.setViewportView(txtChannelMsg);

        javax.swing.GroupLayout channelMsgPanelLayout = new javax.swing.GroupLayout(channelMsgPanel);
        channelMsgPanel.setLayout(channelMsgPanelLayout);
        channelMsgPanelLayout.setHorizontalGroup(
            channelMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
        );
        channelMsgPanelLayout.setVerticalGroup(
            channelMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
        );

        msgPanel.addTab("Channel", channelMsgPanel);

        chat_msgPanel.add(msgPanel);

        chatPanel.setMaximumSize(new java.awt.Dimension(2147483647, 50));
        chatPanel.setMinimumSize(new java.awt.Dimension(0, 20));
        chatPanel.setName(""); // NOI18N
        chatPanel.setPreferredSize(new java.awt.Dimension(494, 50));
        chatPanel.setLayout(new java.awt.BorderLayout());

        textFieldChat.setMaximumSize(new java.awt.Dimension(2147483647, 15));
        textFieldChat.setMinimumSize(new java.awt.Dimension(6, 15));
        textFieldChat.setPreferredSize(new java.awt.Dimension(6, 15));
        textFieldChat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textFieldChatKeyPressed(evt);
            }
        });
        chatPanel.add(textFieldChat, java.awt.BorderLayout.CENTER);

        chat_msgPanel.add(chatPanel);

        splitPanel1.setRightComponent(chat_msgPanel);

        getContentPane().add(splitPanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        itemConnect.setText("Connect to channel");
        itemConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConnectActionPerformed(evt);
            }
        });
        jMenu1.add(itemConnect);

        txtCreate.setText("Create new channel");
        txtCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreateActionPerformed(evt);
            }
        });
        jMenu1.add(txtCreate);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Tool");

        fileTransferItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ftransfer.png"))); // NOI18N
        fileTransferItem.setText("File Transfer");
        fileTransferItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileTransferItemActionPerformed(evt);
            }
        });
        jMenu2.add(fileTransferItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listChannelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_listChannelMouseClicked
    {//GEN-HEADEREND:event_listChannelMouseClicked
        cmc.ChannelListClicked(evt);
    }//GEN-LAST:event_listChannelMouseClicked

    private void itemConnectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_itemConnectActionPerformed
    {//GEN-HEADEREND:event_itemConnectActionPerformed
        cmc.itemConnectClicked();
    }//GEN-LAST:event_itemConnectActionPerformed

    private void txtCreateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtCreateActionPerformed
    {//GEN-HEADEREND:event_txtCreateActionPerformed
        cmc.itemCreateClicked();
    }//GEN-LAST:event_txtCreateActionPerformed

    private void textFieldChatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldChatKeyPressed
        if (evt.getKeyCode() == 10){
            String msg = textFieldChat.getText();
            if(!msg.isEmpty())
                cmc.sendMsg(msg);
            textFieldChat.setText("");
        }
    }//GEN-LAST:event_textFieldChatKeyPressed

    private void fileTransferItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileTransferItemActionPerformed
        doFileTransfer();
    }//GEN-LAST:event_fileTransferItemActionPerformed

    /**
     * This function update the channel list
     */
    public void updateChannelList(ArrayList<Channel> list)
    {
        DefaultListModel dlm = new DefaultListModel();
        for(Channel channel : list)
        {
            dlm.addElement(channel.getName());
            for(Client client : channel.getListClient())
            {
                dlm.addElement("     " + client.getUsername());
                if(client.getUsername().equals(cmc.user.getUsername()))
                    cmc.currentChannel.setName(channel.getName());
            }
        }
        listChannel.setModel(dlm);
        writeConsole("updated");
    }
    
    /**
     * This function set up the message panel for the channel
     */
    public void setMsgPanel()
    {
        if(channelMsgPanel.getParent() != msgPanel)
            msgPanel.add(channelMsgPanel);
        txtChannelMsg.setText("");
        msgPanel.setTitleAt(2, cmc.currentChannel.getName());
        msgPanel.setSelectedIndex(2);
    }
    
    /**
     * This function shows a create channel dialog and return the result
     */
    public Channel showCreateChannelDialog()
    {
        Channel channel = null;
        String[] options = {
            "Create",
            "Cancel"
        };
        int option = JOptionPane.showOptionDialog(this, dlgCreate.getRootPane(), "Create channel", JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
        if(option == 0)
        {
            channel = new Channel();
            channel.setName(txtName.getText());
            channel.setPassword(new String(txtPassword.getPassword()));
            channel.setTopic(txtTopic.getText());
            channel.setDescription(txtDesc.getText());
        }
        return channel;
    }
    
    /**
     * This function returns currently selected channel
     */
    public String getSelectedChannel()
    {
        int index = listChannel.getSelectedIndex();
        if(index == -1)
            return null;
        else
            return listChannel.getModel().getElementAt(index);
    }
    
    /**
     * This function show a password dialog and return the password
     */
    public String getPassword()
    {
        JPanel panel = new JPanel();
        JLabel label = new JLabel("Enter channel's password:");
        JPasswordField jpf = new JPasswordField();
        jpf.setColumns(20);
        panel.add(label);
        panel.add(jpf);
        String[] options = new String[]
        {
            "OK", "Cancel"
        };
        int option = JOptionPane.showOptionDialog(null, panel, "Enter password", JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[1]);
        if(option == 0)
        {
            char[] password = jpf.getPassword();
            return new String(password);
        }
        return null;
    }
    
    /**
     * This function prints chat message
     */
    public void printMessage(String sender, String message)
    {
        txtChannelMsg.setText(txtChannelMsg.getText() + sender + ": " + message + "\n");
    }
    
    /**
     * This function writes a new line in console
     */
    public void writeConsole(String s)
    {
        txtConsole.setText(txtConsole.getText() + s + "\n");
    }
    
    
    /*
    *   this function opens fileChooser and does file transfer
    */
    private void doFileTransfer(){
        JFileChooser fileChooser = new JFileChooser();        
        int action = fileChooser.showDialog(this, "Choose");
        if (action == JFileChooser.APPROVE_OPTION){
            File file = fileChooser.getSelectedFile();
            System.out.println(file.getAbsoluteFile());
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientMainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientMainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientMainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientMainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientMainFrm(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel channelMsgPanel;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JPanel chat_msgPanel;
    private javax.swing.JDialog dlgCreate;
    private javax.swing.JMenuItem fileTransferItem;
    private javax.swing.JMenuItem itemConnect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JList<String> listChannel;
    private javax.swing.JTabbedPane msgPanel;
    private javax.swing.JPanel roomInfoPanel;
    private javax.swing.JPanel roomPanel;
    private javax.swing.JPanel serverMsgPanel;
    private javax.swing.JSplitPane splitPanel1;
    private javax.swing.JSplitPane splitPanel2;
    private javax.swing.JTextField textFieldChat;
    private javax.swing.JTextArea txtChannelMsg;
    private javax.swing.JTextArea txtConsole;
    private javax.swing.JMenuItem txtCreate;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtTopic;
    private javax.swing.JPanel underBar;
    // End of variables declaration//GEN-END:variables

    public class ChannelPopupMenu extends JPopupMenu
    {
        JMenuItem itemConnect, itemCreate;
        public ChannelPopupMenu(Channel channel)
        {
            JMenuItem itemConnect = new JMenuItem("Connect to channel");
            itemConnect.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae)
                {
                    cmc.itemConnectClicked();
                }
            });
            add(itemConnect);
            JMenuItem itemCreate = new JMenuItem("Create new channel");
            itemCreate.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae)
                {
                    showCreateChannelDialog();
                }
            });
            
        }
    }
}
